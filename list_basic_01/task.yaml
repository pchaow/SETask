accessible: true
author: ''
categories: []
contact_url: ''
context: |+
    ลิสต์ใช้สำหรับการนิยามข้อมูลให้กับตัวแปร โดยที่ข้อมูลดังกล่าวนั้นประกอบไปด้วยค่าหลายๆ ค่าเรียงต่อกัน

    ในการสร้างลิสต์ใช้เครื่องหมาย ``[]`` ข้างในบรรุข้อมูลที่ต้องการคั่นด้วยเครื่องหมาย ``\,``

    .. code:: python

        empty_list = []
        days = ["mon","tue","wed","thu","fri","sat","sun"]
        fibonacci_numbers = [0,1,1,2,3,5,8,13]
        student_data = ["John","Doe",19,"University Of Phayao","ICT","SE",3.78]


    **แม้ว่าลิสต์จะสามารถบรรจุข้อมูลที่มีชนิดข้อมูลแตกต่างกันได้ แต่ไม่แนะนำให้ทำเช่นนั้น เพราะจะทำให้โปรแกรมอ่านยากและแก้ปัญหายากขึ้น อีกทั้งยังมีชนิดข้อมูลลักษณะอื่นที่เหมาะสมกว่า เช่น dict (Dictionary) หรือสร้างชนิดข้อมูลใหม่ขึ้นมาโดยใช้ class เป็นต้น**

    การหาจำนวนสมาชิกในลิสต์
    ------------------------------

    เราสามารถใช้ฟังก์ชัน ``len`` โดยที่ ``len(obj) -> int`` ซึ่งเป็นฟังก์ชันที่ใช้สำหรับการหาจำนวนสมาชิกในสิสต์

    .. code:: python

       numbers = [2,4,6,8,10]
       print(len(numbers)) #5



    การเข้าถึงข้อมูลในลิสต์
    -----------------------

    เราสามารถเข้าถึงข้อมูลในลิสต์และแก้ไขข้อมูลในลิสต์นั้นๆ ได้ โดยใช้เครื่องหมาย [] และระบุตำแหน่งที่ต้องการดังตัวอย่าง

    .. code:: python

        numbers = [1,2,3,4,5,6,7,8]

        print(numbers[0]) # 1
        print(numbers[7]) # 8

        #list index can be negative
        print(numbers[-1]) #8
        print(numbers[-2]) #7
        print(numbers[-8]) #1

        numbers[2] = 10

        print(numbers) # [1,2,10,4,5,6,7,8]


    เรายังสามารถใช้ for เพื่อเข้าถึงข้อมูลสมาชิกในลิสต์ได้

    .. code:: python

        numbers = [1,2,3,4,5,6,7,8,9,10]
        for i in numbers :
            print(i)

    **ตัวอย่าง** การหาผลรวมของเลขในลิสต์

    .. code:: python

        numbers = [1,2,3,4,5,6,7,8,9,10]
        acc = 0
        for i in numbers :
            acc += i
        print(acc)


    การแก้ไขข้อมูลภายใน
    --------------------

    ลิสต์เป็นชนิดข้อมูลที่สามารถแก้ไขข้อมูลภายในได้ ตรงข้ามกับสตริงและทูเบิล ที่ไม่สามารถทำได้


    **การเพิ่มสมาชิก**
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

    เราสามารถเพิ่มสมาชิกใหม่เข้าไปต่อท้ายในลิสต์ได้ โดยใช้เมธอด append(obj) เมื่อ obj คือวัตถุที่ต้องการเพิ่ม

    .. code:: python

        fibo = [0,1]
        nextfib = fibo[-1] + fibo[-2]
        fibo.append(nextfib)
        print(fibo) #[0,1,1]



    **ตัวอย่างการใช้งาน** การฟิวเตอร์ (เลือก)

    สมมติว่าเราต้องการเลขจำนวนคู่ ออกจากลิสต์ของเลขจำนวนเต็มใดๆ

    .. code:: python

        numbers = [1,2,3,4,5,6,7,8,9,10]
        even_numbers = []

        for i in numbers :
            if i%2 == 0 :
                even_numbers.append(i)
        print(even_numbers) #[2,4,6,8,10]


    **การลบสมาชิก**
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

    เราสามารถใช้เมธอด remove(obj) pop(index) clear() เพื่อลบสมาชิกออกจากลิสต์ได้

    .. code:: python

        a = [9,8,7,6,5,4,3,2,1]
        a.remove(5)
        print(a) #[9,8,7,6,4,3,2,1]

        a.pop(1)
        print(a) #[9,7,6,4,3,2,1]

        a.clear()
        print(a) #[]


    การเรียงลำดับ
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

    เมธอด sort() สามารถใช้เรียงลำดับสมาชิกได้


    .. code:: python

        listX = [100, 50, 65, 82, 23]
        listX.sort()
        print(listX) #[23, 50, 65, 82, 100]

        #เรียงย้อนกลับ
        listX.sort(reverse = True)
        print(listX) #[100, 82, 65, 50, 23]


    การคัดลอก list
    ^^^^^^^^^^^^^^^^^^^^^^^^^^

    เราไม่สามารถใช้เครื่องหมาย ``\=`` เพื่อการคัดลอกลิสต์ได้ ควรใช้เมธอด copy() เพื่อการคัดลอก ดังตัวอย่าง

    .. code:: python

        a = [1,2,3]
        b = a
        a.append(4)
        print(b) #[1,2,3,4]
        b.append(5)
        print(a) #[1,2,3,4,5]

        c = a.copy()
        print(c) #[1,2,3,4,5]
        a.append(6)
        print(c) #[1,2,3,4,5]
        print(a) #[1,2,3,4,5,6]

    การนำลิสต์มาเชื่อมกัน
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    เราสามารถใช้เมธอด extend, append หรือ เครื่องหมาย + เพื่อนำลิสต์มาต่อกันได้

    .. code:: python

       a = [1,2,3]
       b = [4,5,6]
       a = a+b
       print(a) #[1,2,3,4,5,6]

       a = [1,2,3]
       b = [4,5,6]
       for i in b :
           a.append(i)
       print(a) #[1,2,3,4,5,6]

       a = [1,2,3]
       b = [4,5,6]
       a.extend(b)
       print(a) #[1,2,3,4,5,6]



environment_id: mcq
environment_parameters: {}
environment_type: mcq
evaluate: best
file: ''
groups: false
input_random: '0'
name: ลิสต์และการใช้งานเบื้องต้น
network_grading: false
problems:
    p1:
        type: multiple_choice
        name: การเข้าถึงสมาชิกในลิสต์
        header: |-
            กำหนดให้ L = [6,7,1,2,0]

            ให้เลือกนิพจน์ที่ให้ผลลัพธ์เป็นสมาชิกตัวแรกและตัวสุดท้ายของลิสต์ตามลำดับ
        multiple: true
        limit: 0
        choices:
        -   text: L[0], L[4]
            valid: true
        -   text: L[0], L[-1]
            valid: true
        -   text: L[-5], L[-1]
            valid: true
        -   text: L[len(L)-5], L[len(L)-1]
            valid: true
        -   text: L[1], L[5]
    p2:
        type: multiple_choice
        name: ลองรันคำสั่งข้างล่างนี้แล้วตอบคำถาม
        header: |-
            aList = [1, 2, 3, 4, 5, 6, 7]

            pow2 =  [2 * x for x in aList]

            print(pow2)

            ผลลัพธ์ของโปรแกรมคือข้อใด
        limit: 0
        choices:
        -   text: ' [2, 4, 6, 8, 10, 12, 14]'
            valid: true
        -   text: '[2, 4, 8, 16, 32, 64, 128]'
    p3:
        type: multiple_choice
        name: ผลลัพธ์ของคำสั่งด้านล่างคืออะไร
        header: |
            list1 = ['xyz', 'zara', 'PYnative']

            print (max(list1))
        limit: 0
        choices:
        -   text: PYnative
        -   text: zara
            valid: true
    p4:
        type: multiple_choice
        name: ให้เลือกคำตอบที่ถูกทุกคำตอบ
        header: |-
            listOne  =  ['a', 'b', 'c', 'd']

            listTwo =  ['e', 'f', 'g']

            นิพจน์ในข้อใดให้ผลลัพธ์เป็นลิสต์ 2 อันที่เชื่อมกัน
        multiple: true
        limit: 0
        choices:
        -   text: newList = listOne + listTwo
            valid: true
        -   text: newList = extend(listOne, listTwo)
        -   text: newList = listOne.extend(listTwo)
        -   text: newList.extend(listOne, listTwo)
    p5:
        type: multiple_choice
        name: ผลลัพธ์ในการทำงานของโปรแกรมด้านล่างคือข้อใด
        header: |-
            sampleList = [10, 20, 30, 40, 50]

            sampleList.append(60)

            print(sampleList)

            sampleList.append(60)

            print(sampleList)
        limit: 0
        choices:
        -   text: |
                [10, 20, 30, 40, 50, 60]

                [10, 20, 30, 40, 50, 60]
        -   text: |-
                [10, 20, 30, 40, 50, 60]

                [10, 20, 30, 40, 50, 60, 60]
            valid: true
    p6:
        type: multiple_choice
        name: ผลลัพธ์ของโปรแกรมด้านล่างคือข้อใด
        header: |-
            l = [None] * 10

            print(len(l))
        limit: 0
        choices:
        -   text: '10'
            valid: true
        -   text: '0'
        -   text: Syntax Error
    p7:
        type: multiple_choice
        name: จงเลือกคำสั่งที่เป็นการคัดลอกลิสต์
        header: |+
            aList = ['a', 'b', 'c', 'd']

        multiple: true
        limit: 0
        choices:
        -   text: newList = copy(aList)
        -   text: newList = aList.copy()
            valid: true
        -   text: newList.copy(aList)
        -   text: newList = list(aList)
            valid: true
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
...
