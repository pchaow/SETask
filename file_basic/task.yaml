accessible: false
author: ''
categories: []
contact_url: ''
context: |+
    ในการใช้งานไฟล์เบื้องต้นมีขั้นตอนดังนี้

      1. เปิดไฟล์
      2. อ่านหรือเขียนไฟล์
      3. ปิดไฟล์

    1. เปิดไฟล์
    -----------------------

    สำหรับการเปิดไฟล์ สามารถทำได้โดยใช้ ฟังก์ชัน open ซึ่งมีนิยามอย่างย่อ ``open(file:str, mode:str = 'r') -> fileObj``
    โดยที่ mode มีค่าดังนี้

        - "r" - อ่านไฟล์ - โหมด "r" ถือว่าเป็นค่ามาตรฐาน (ถ้าไม่ระบุ ``mode`` ก็จะถือว่าเป็น mode r). ทำการเปิดไฟล์ที่ระบุขึ้นมา แต่ถ้าเปิดไม่ได้จะก่อให้เกิด ``error``
        - "a" - เปิดไฟล์แบบเขียนต่อ - เปิดไฟล์ขึ้นมาเพื่อเขียนข้อความต่อท้าย หากไม่มีไฟล์ถือว่าเป็นการสร้างไฟล์นั้นๆ
        - "w" - เขียนไฟล์ - เปิดไฟล์เพื่อเขียน(ตั้งแต่ตัวอักษรแรก) หากไม่มีไฟล์ถือว่าเป็นการสร้างไฟล์นั้นๆ
        - "x" - สร้างไฟล์ - สร้างไฟล์ใหม่ แต่ถ้ามีไฟล์อยู่แล้วจะก่อให้เกิด  ``error``

        โหมดการเปิดแบ่งเป็น text mode และ binary mode โดยสามารถพิมพ์ต่อท้าย r a w x ได้

        - "t" - Text - เป็นค่ามาตรฐาน (ไม่ระบุจะถือว่าเป็นโหมดนี้) ใช้สำหรับอ่านไฟล์ข้อความ
        - "b" - Binary - ใช้สำหรับอ่านไฟล์ไบนารี เช่น รูปภาพ เป็นต้น



    .. code:: python

       file = open('input.txt','r')


    2. การอ่านไฟล์
    --------------------------

    **fileObj.read(size) -> str|bytes**


    เมธอด read  เป็นการอ่านไฟล์ตามขนาดที่ระบุไว้ หากไม่ระบุขนาดถือว่าอ่านทั้งไฟล์ ซึ่งให้ผลลัพธ์เป็น str หรือ byte ขึ้นอยู่กับการเปิดไฟล์ว่าเปิดแบบ text หรือ binary


    **ตัวอย่าง**

    .. code:: python

        inputfile = open('testcases/1.in','r')
        input_text =  inputfile.read()

        outputfile = open('testcases/1.out','r')
        output_text = outputfile.read()


    **fileObj.readline() -> str**

    เป็นเมธอดสำหรับการอ่านไฟล์ทีละ 1 บรรทัด เช่น

    ..  code:: raw

        #input.txt
        This is a Book.
        Hello.


    .. code:: python

       f = open('input.txt','r')
       l1 = f.readline() # 'This is a Book.\n'
       l2 = f.readline() # 'Hello.\n'
       l3 = f.readline() # '\n'

    สังเกตุว่าจะมี ``\n`` ติดมาด้วย สามารถเอาออกได้โดยใช้ เมธอด str.strip() เพื่อลบ whitespasce ที่ครอบข้อความอยู่

    .. code:: python

        >>> "    hello    \n".strip()
        "hello"


    นอกจากนี้ยังสามารถใช้ loop ในการอ่านไฟล์ได้ ดังนี้

    .. code:: python

      f = open('input.txt','r')
      for line in f :
          print(line)

    ซึ่งได้ผลลัพธ์ดังนี้

    .. code:: raw

        This is a Book.

        Hello.


    ซึ่งพิจารณาดีๆ จะเห็นการขึ้นบรรทัดใหม่ เราสามารถ ตัดออกได้โดยใช้ เมธอด strip()

    .. code:: python

      f = open('input.txt','r')
      for line in f :
          print(line.strip())

    ซึ่งได้ผลลัพธ์ดังนี้

    .. code:: raw

        This is a Book.
        Hello.

    แน่นอว่าบรรทัดสุดท้ายเป็นค่าว่างดังนั้นโปรแกรมจะพิมพ์บรรทัดใหม่ขึ้นมาเพิ่มอีก 1 บรรทัด


    3. การเขียนไฟล์
    -------------------------

    ในการเขียนไฟล์ใช้เมธอด  write(str) เพื่อเขียนข้อมูลลงไฟล์

    .. code:: python

       outputfile = open('output.txt','w')
       outputfile.write("Hello World\n")

    4. การปิดไฟล์
    -----------------------

    การปิดไฟล์ใช้เมธอด close() เพื่อปิดการใช้งานไฟล์ ทุกไฟล์เมื่อเปิดแล้วก็ควรที่จะปิดเมื่อไม่ได้ใช้งาน


    .. code:: python

       outputfile = open('output.txt','w')
       outputfile.write("Hello World\n")
       outputfile.close()


environment_id: python3
environment_parameters:
    limits:
        time: '30'
        hard_time: ''
        memory: '100'
    run_cmd: ''
environment_type: docker
evaluate: best
file: ''
groups: false
input_random: '0'
name: 'การอ่านไฟล์ : file reading'
network_grading: false
problems:
    p1:
        type: code
        name: อ่านไฟล์
        header: |+
            มีไฟล์ที่ชื่อว่า input.txt ซึ่งในแต่ละบรรทัดมีตัวเลขจำนวนเต็มอยู่ 1 จำนวน
            ให้เขียนโปรแกรมเพื่อนับว่ามีเลขคู่อยู่กี่ตัว โดยแสดงคำตอบออกทางจอภาพ

            **File input.txt**

            .. code:: raw

                5
                4
                1
                3
                2

            **OUTPUT**

            .. code:: raw

                2

        language: python
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
...
