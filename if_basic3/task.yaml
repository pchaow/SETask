accessible: false
author: ''
categories: []
contact_url: ''
context: |+
    จากบทเรียนก่อนหน้าในเรื่องของ ``if-else`` นั้นเป็นการสร้างการทำงาน 2 ลักษณะภายใต้เงื่อนไขตัดสินใจเพียงเงื่อนไขเดียว(?)
    แต่ในกรณีที่ต้องการสร้างการทำงานที่มีมากกว่า 2 ลักษณะภายใต้การตัดสินใจหรือเงื่อนไขมากกว่าเงื่อนไขเดียวนั้น
    สามารถทำได้โดยใช้คำสั่ง ``elif`` เพื่อเพิ่มลักษณะการทำงานภายใต้เงื่อนไขเพิ่มเติม (ในกรณีที่เงื่อนไขแรกไม่เป็นจริง)

    โดยการใช้งานคำสั่ง if-elif-else มีรูปแบบดังนี้

    .. code::

        if condition1 :
            statement(s)...
        elif condition2 :
            statement(s)...
        elif condition3 :
            statement(s)...
        .
        .
        .
        else :
            statement(s)....


    จากรูปแบบข้างต้นแสดงให้เห็นว่าคำสั่ง elif นั้นเราสามารถนำไปแทรกตรงกลางระหว่าง if และ else ได้
    ซึ่งเป็นการเพิ่มเงื่อนไขการทำงานของโปรแกรมให้มีลักษณะการทำงานเพิ่มขึ้นได้



    ตัวอย่าง มาตรการเยียวยาวิกฤติ COVID-19
    ==================================================

    ในช่วงวิกฤติ COVID-19 นั้นรัฐบาลไทยภายใต้การบริหารงานของ พล.อ ประยุทธ์ จันทร์โอชา นายกรัฐมนตรีในขณะนั้น
    ได้มีนโยบายเยียวยาให้กับประชาชนในช่วงการระบาดระรอก มกราคม พ.ศ.2564 ซึ่งมีเงื่อนไขดังต่อไปนี้

    (สมมติ) ผู้ที่ได้รับเงินเยียวยาผ่านโครงการเราชนะ 7000 บาท มีคุณสมบัติเบื้องต้นคร่าวๆ ดังนี้
    1. ไม่เป็นผู้ประกันตน ม.33
    2. มีเงินฝากในบัญชีไม่เกิน 500,000 บาท
    3. มีรายได้ไม่เกิน 300,000 บาทต่อปี

    (สมมติ) ผู้ที่ได้รับเงินเยียวยาผ่านโครงการ ม.33 เรารักกัน 4000 บาท มีคุณสมบัติเบื้องต้นคร่าวๆ ดังนี้
    1. เป็นผู้ประกันตน ม.33
    2. มีเงินฝากในบัญชีไม่เกิน 500,000 บาท

    จากตัวอย่างข้างต้นนี้ จึงสามารถเขียนเป็นขั้นตอนการทำงานง่ายๆ ได้ดังนี้

    .. code::

        if ไม่เป็นผู้ประกันตน ม.33 และ มีเงินฝากในบัญชีไม่เกิน 500,000 บาท และ มีรายได้ไม่เกิน 300,000 บาทต่อปี :
            ได้รับเงินเยียวยาผ่านโครงการเราชนะ 7000 บาท
        elif เป็นผู้ประกันตน ม.33 และ มีเงินฝากในบัญชีไม่เกิน 500,000 บาท :
            ได้รับเงินเยียวยาผ่านโครงการ ม.33 เรารักกัน 4000 บาท
        else :
            เสียใจด้วยคุณไม่ได้รับสิทธิ์


    จากตัวอย่างข้างต้นสามารถเขียนโปรแกรมได้ดังนี้

    .. raw:: html

        <iframe height="600px" width="100%" src="https://replit.com/@chaow_po/ThaiChana?lite=false" scrolling="no" frameborder="no" allowtransparency="true" allowfullscreen="true" sandbox="allow-forms allow-pointer-lock allow-popups allow-same-origin allow-scripts allow-modals"></iframe>



    ตัวอย่าง : การตัดเกรด
    =======================

    วิชา  Python101 มีการให้เกรดดังตาราง


        +-------+-------+
        | Score | Grade |
        +=======+=======+
        | >=90  | A+    |
        +-------+-------+
        | >=80  | A     |
        +-------+-------+
        | >=50  | P     |
        +-------+-------+
        | <50   | F     |
        +-------+-------+


    จากตารางตัดเกรดข้างต้นสามารถเขียนคำสั่งภาษาไพทอนเพื่อแสดงผลการเรียนจากคะแนนได้ดังนี้

    .. code:: python

        score = float(input("Enter Score : "))

        if score >= 90 :
            print("A+")
        elif score >= 80 :
            print("A")
        elif score >= 50 :
            print("P")
        else :
            print("F")






environment_id: python3
environment_parameters:
    limits:
        time: '30'
        hard_time: ''
        memory: '100'
    run_cmd: ''
environment_type: docker
evaluate: best
file: ''
groups: false
input_random: '0'
name: การเขียนโปรแกรมแบบมีเงือนไข 3 - if elif else
network_grading: false
problems:
    p1:
        type: code
        name: เวลาอาหาร
        header: |-
            ให้ลองเขียนโปรแกรมเพื่อรับเวลา มีค่าอยู่ระหว่าง 0 นาฬิกาถึง 23 นาฬิกา
            จากนั้นให้แสดงข้อมูลเวลาอาหารดังตาราง

            +----------+----------------+
            | Time     | Eat            |
            +==========+================+
            | 6-10     | Breakfast      |
            +----------+----------------+
            | 11 - 14  | Launch         |
            +----------+----------------+
            | 17 - 18  | Dinner         |
            +----------+----------------+
            | other    | Should not eat |
            +----------+----------------+

            **INPUT**
            ข้อมูลเข้ามี 1 บรรทัด คือเวลา มีหน่วยเป็น นาฬิกา

            **OUTPUT**
            ข้อมูลออกมี 1 บรรทัด คือข้อความ Breakfast | Launch | Dinner | Should not eat อย่างใดอย่างหนึ่งตามตารางข้างบน
        language: python
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
